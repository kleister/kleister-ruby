# Kleister OpenAPI
#
# API definition for Kleister, manage mod packs for Minecraft
#
# The version of the OpenAPI document: 1.0.0-alpha1
# Contact: kleister@webhippie.de
# Generated by: https://openapi-generator.tech
# Generator version: 7.12.0
#

require 'spec_helper'
require 'json'

# Unit tests for Kleister::PackApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PackApi' do
  before do
    # run before each test
    @api_instance = Kleister::PackApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PackApi' do
    it 'should create an instance of PackApi' do
      expect(@api_instance).to be_instance_of(Kleister::PackApi)
    end
  end

  # unit tests for attach_build_to_version
  # Attach a version to a build
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param attach_build_to_version_request The build version data to create or delete
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'attach_build_to_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attach_pack_to_group
  # Attach a group to pack
  # @param pack_id A pack identifier or slug
  # @param permit_pack_group_request The pack group data to permit
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'attach_pack_to_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attach_pack_to_user
  # Attach a user to pack
  # @param pack_id A pack identifier or slug
  # @param permit_pack_user_request The pack user data to permit
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'attach_pack_to_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_build
  # Create a new build for a pack
  # @param pack_id A pack identifier or slug
  # @param create_build_request The build data to create
  # @param [Hash] opts the optional parameters
  # @return [Build]
  describe 'create_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_pack
  # Create a new pack
  # @param create_pack_request The pack data to create
  # @param [Hash] opts the optional parameters
  # @return [Pack]
  describe 'create_pack test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_build
  # Delete a specific build for a pack
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'delete_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_build_from_version
  # Unlink a version from a build
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param attach_build_to_version_request The build version data to create or delete
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'delete_build_from_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_pack
  # Delete a specific pack
  # @param pack_id A pack identifier or slug
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'delete_pack test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_pack_from_group
  # Unlink a group from pack
  # @param pack_id A pack identifier or slug
  # @param delete_pack_from_group_request The pack group data to unlink
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'delete_pack_from_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_pack_from_user
  # Unlink a user from pack
  # @param pack_id A pack identifier or slug
  # @param delete_pack_from_user_request The pack user data to unlink
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'delete_pack_from_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_build_versions
  # Fetch all versions attached to build
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Search query
  # @option opts [String] :sort Sorting column
  # @option opts [String] :order Sorting order
  # @option opts [Integer] :limit Paging limit
  # @option opts [Integer] :offset Paging offset
  # @return [ListBuildVersions200Response]
  describe 'list_build_versions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_builds
  # Fetch all available builds for a pack
  # @param pack_id A pack identifier or slug
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Search query
  # @option opts [String] :sort Sorting column
  # @option opts [String] :order Sorting order
  # @option opts [Integer] :limit Paging limit
  # @option opts [Integer] :offset Paging offset
  # @return [ListBuilds200Response]
  describe 'list_builds test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_pack_groups
  # Fetch all groups attached to pack
  # @param pack_id A pack identifier or slug
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Search query
  # @option opts [String] :sort Sorting column
  # @option opts [String] :order Sorting order
  # @option opts [Integer] :limit Paging limit
  # @option opts [Integer] :offset Paging offset
  # @return [ListPackGroups200Response]
  describe 'list_pack_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_pack_users
  # Fetch all users attached to pack
  # @param pack_id A pack identifier or slug
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Search query
  # @option opts [String] :sort Sorting column
  # @option opts [String] :order Sorting order
  # @option opts [Integer] :limit Paging limit
  # @option opts [Integer] :offset Paging offset
  # @return [ListPackUsers200Response]
  describe 'list_pack_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_packs
  # Fetch all available packs
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Search query
  # @option opts [String] :sort Sorting column
  # @option opts [String] :order Sorting order
  # @option opts [Integer] :limit Paging limit
  # @option opts [Integer] :offset Paging offset
  # @return [ListPacks200Response]
  describe 'list_packs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for permit_pack_group
  # Update group perms for pack
  # @param pack_id A pack identifier or slug
  # @param permit_pack_group_request The pack group data to permit
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'permit_pack_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for permit_pack_user
  # Update user perms for pack
  # @param pack_id A pack identifier or slug
  # @param permit_pack_user_request The pack user data to permit
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'permit_pack_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for show_build
  # Fetch a specific build for a pack
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param [Hash] opts the optional parameters
  # @return [Build]
  describe 'show_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for show_pack
  # Fetch a specific pack
  # @param pack_id A pack identifier or slug
  # @param [Hash] opts the optional parameters
  # @return [Pack]
  describe 'show_pack test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_build
  # Update a specific build for a pack
  # @param pack_id A pack identifier or slug
  # @param build_id A build identifier or slug
  # @param create_build_request The build data to update
  # @param [Hash] opts the optional parameters
  # @return [Build]
  describe 'update_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_pack
  # Update a specific pack
  # @param pack_id A pack identifier or slug
  # @param create_pack_request The pack data to update
  # @param [Hash] opts the optional parameters
  # @return [Pack]
  describe 'update_pack test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end
end
